#!/bin/zsh
# shellcheck shell=bash

export DOCKER_REPO_PREFIX="victory-sokolov"

# Helper functions
docker-clean() # stops and cleans all docker containers & images
{
    docker stop $(docker ps -a -q)
    docker rm $(docker ps -a -q)
}

dms() # docker-machine start
{
    machine_name="$@"
    docker-machine start "$machine_name"
    docker-machine env "$machine_name"
    eval "$(docker-machine env "$machine_name")"
}

drmnone() # remove untagged images
{
	docker rmi -f $(docker images -f "dangling=true" -q)
}


docker-compose-watch() # watch and reload docker
{
  local args;
  if [[ $1 == "help" ]] || [[ $1 = "--help" ]]; then
    watchexec --help | grep -A 3 "OPTIONS:";
    return;
  else
    args='--filter "*/docker-compose.yml"' && [[ $1 ]] && args=$@;
  fi
  eval watchexec --restart "$args" -w $(pwd) "docker-compose up"
}

di() # Get container id by name
{
	docker ps -aqf "name=$1"
}

dcs() # Stop container by name
{
	docker container stop $(docker container ls -q --filter name="$1"*)
}

docker-stop() # Stop all containers
{
    docker stop $(docker container ls -q)
}

da() # Select a docker container to start and attach to
{
  local cid
  cid=$(docker ps -a | sed 1d | fzf -1 -q "$1" | awk '{print $1}')

  [ -n "$cid" ] && docker start "$cid" && docker attach "$cid"
}

dlogs() # Check logs of container 
{
  docker ps --format '{{.Names}}' | fzf --preview="docker logs {}"
}

drm() # Select a docker container to remove
{
  docker ps -a | sed 1d | fzf -q "$1" --no-sort -m --tac | awk '{ print $1 }' | xargs -r docker rm
}

drv() # Select Docker volume to remove
{
  docker volume ls -q | fzf --multi --tac | xargs -r docker volume rm -f
}

dcs() # Select a running docker container to stop
{
  local cid
  cid=$(docker ps | sed 1d | fzf -q "$1" | awk '{print $1}')

  [ -n "$cid" ] && docker stop "$cid"
}

drmprefix() # Remove all containers named with the given prefix
{ 
    docker ps -aq --filter name="${1}*" | xargs docker stop | xargs docker rm 
}

cto() # Containers resource usage overview
{
    # https://github.com/bcicen/ctop
    docker run --rm -ti \
    --name=ctop \
    --volume /var/run/docker.sock:/var/run/docker.sock:ro \
    quay.io/vektorlab/ctop:latest
}

denv() # Print all env variables of the container
{
    docker inspect -f '{{range $index, $value := .Config.Env}}{{println $value}}{{end}}' "$@"
}

dockerlint() # Lint Dockerfile with Hadolint
{
  docker container run --rm -i \
    hadolint/hadolint hadolint --ignore DL3008 "${@}" - < Dockerfile
}

dex() # Attach to running Docker container
{
    CONTAINER=$(docker ps | rg -v CONTAINER | awk '-F ' ' {print $NF}' | fzf)
    if [ ! -z "$CONTAINER" ]
    then
        docker exec -it "$CONTAINER" bash
    fi
}

clean_containers() # Remove containers that were used N month ago
{
    days=${1:-90}
    hours=$((24 * days))
    echo $hours
    docker image prune --all --filter "until=4320h"
}

dockerignore-test() # Files that would be included in a Dockerfile, with size in megabytes
{
  rsync --dry-run -av --exclude-from='.dockerignore' --out-format="%l %n" ./ /tmp/ | \
    awk '{size_mb = $1 / (1024 * 1024); printf "%.2f MB %s\n", size_mb, $2}' | \
    sort -k1,1nr -k2,2 | \
    less
}

# Docker containers aliases and functions
# Scrapy splash container for data scrapping
alias splash="docker run --rm --name scrapy-splash -d -p 8050:8050 scrapinghub/splash"
alias docker-compose-reload="docker-compose-watch"
