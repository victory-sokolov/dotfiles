#!/bin/zsh
# shellcheck shell=bash

export DOCKER_REPO_PREFIX="victory-sokolov"

# Helper functions
function docker-clean() # stops and cleans all docker containers & images
{
    docker stop $(docker ps -a -q)
    docker rm $(docker ps -a -q)
}

function dms() # docker-machine start
{
    machine_name="$@"
    docker-machine start "$machine_name"
    docker-machine env "$machine_name"
    eval "$(docker-machine env "$machine_name")"
}

function drmnone() # remove untagged images
{
	docker rmi -f $(docker images -f "dangling=true" -q)
}


function docker-compose-watch() # watch and reload docker
{
  local args;
  if [[ $1 == "help" ]] || [[ $1 = "--help" ]]; then
    watchexec --help | grep -A 3 "OPTIONS:";
    return;
  else
    args='--filter "*/docker-compose.yml"' && [[ $1 ]] && args=$@;
  fi
  eval watchexec --restart "$args" -w $(pwd) "docker-compose up"
}

function di() # Get container id by name
{
	docker ps -aqf "name=$1"
}

function dcs() # Stop container by name
{
	docker container stop $(docker container ls -q --filter name="$1"*)
}

function docker-stop() # Stop all containers
{
    docker stop $(docker container ls -q)
}

function da() # Select a docker container to start and attach to
{
  local cid
  cid=$(docker ps -a | sed 1d | fzf -1 -q "$1" | awk '{print $1}')

  [ -n "$cid" ] && docker start "$cid" && docker attach "$cid"
}

function dlogs() # Check logs of container 
{
  # Get a list of running Docker container names
  local container_names=$(docker ps --format '{{.Names}}')

  # Use fzf to interactively select a container
  local selected_container=$(echo "$container_names" | fzf --prompt="Select a Docker container: ")

  # Check if a container was selected
  if [ -n "$selected_container" ]; then
    # Show logs for the selected container
    docker logs -f "$selected_container"
  else
    echo "No container selected."
  fi
}

function drm() # Select a docker container to remove
{
  docker ps -a | sed 1d | fzf -q "$1" --no-sort -m --tac | awk '{ print $1 }' | xargs -r docker rm
}

function ds() # Select a running docker container to stop
{
  local cid
  cid=$(docker ps | sed 1d | fzf -q "$1" | awk '{print $1}')

  [ -n "$cid" ] && docker stop "$cid"
}

function drmprefix() # Remove all containers named with the given prefix
{ 
    docker ps -aq --filter name="${1}*" | xargs docker stop | xargs docker rm 
}

function cto() # Containers resource usage overview
{
    # https://github.com/bcicen/ctop
    docker run --rm -ti \
    --name=ctop \
    --volume /var/run/docker.sock:/var/run/docker.sock:ro \
    quay.io/vektorlab/ctop:latest
}

# Docker containers aliases and functions
# Scrapy splash container for data scrapping
alias splash="docker run --rm --name scrapy-splash -d -p 8050:8050 scrapinghub/splash"
alias docker-compose-reload="docker-compose-watch"
