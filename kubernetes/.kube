#!/bin/zsh

kube-exec() # Kubernetes exec to the POD
{
    kubectl get pods --no-headers \
        | fzf | awk '{print $1}' \
        | xargs -o -I % kubectl exec -it % -- bash
}

kube-logs() # Kubenetes POD logs
{
    kubectl get pods -o name | fzf --preview="kubectl logs {}"
}

kube-context()
{
    kubectl config use-context $(kubectl config get-contexts -o name | fzf --height=10 --prompt="Kubernetes Context> ")    
}

kube-namespace()
{
    kubectl config set-context --current --namespace "$(kubectl get ns -o name | fzf -d/ --with-nth=2 | cut -d/ -f2)"
}

kdelpod() # Delete selected pods
{
    kubectl get pods --all-namespaces --no-headers | \
    awk '$1 != "kube-system" && $1 != "kube-public"' | \
    fzf --multi --tac --prompt="Select pods to delete > " | \
    while read namespace pod rest; do
        kubectl delete pod -n "$namespace" "$pod"
    done
}

kdeldeploy() # Delete selected deployments
{
    kubectl get deployments --all-namespaces --no-headers | \
    fzf --multi --tac --prompt="Select deployments to delete > " | \
    while read line; do
        namespace=$(echo "$line" | awk '{print $1}')
        deployment=$(echo "$line" | awk '{print $2}')
        kubectl delete deployment -n "$namespace" "$deployment"
    done
}

kdelsvc() # Delete selected services
{
    kubectl get svc --all-namespaces --no-headers | \
    fzf --multi --tac --prompt="Select services to delete > " | \
    while read line; do
        service=$(echo "$line" | awk '{print $1}')
        service=$(echo "$line" | awk '{print $2}')
        kubectl delete svc -n "$namespace" "$service"
    done
}

kube-restart-pods() # Restart all pods that are not in Running state
{
    kubectl get pods --all-namespaces --field-selector=status.phase!=Running \
        -o jsonpath='{range .items[*]}{.metadata.namespace}{" "}{.metadata.name}{"\n"}{end}' | \
        while read namespace pod; do kubectl delete pod "$pod" -n "$namespace"; done
}

kube-delete() # Delete kubernetes resources
{
    kubectl delete pods,services,deployments,pvc,pv,configmaps,jobs --all --all-namespaces
}
